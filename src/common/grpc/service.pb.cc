// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

#include "service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace FLINT_RPC_SERVICE {
}  // namespace FLINT_RPC_SERVICE
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_service_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_service_2eproto = nullptr;
const uint32_t TableStruct_service_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_service_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rservice.proto\022\021FLINT_RPC_SERVICE\032\rmess"
  "age.proto2\361\004\n\rVolumeService\022m\n\020GetFlintM"
  "etadata\022*.FLINT_RPC_MESSAGE.GetFlintMeta"
  "dataRequest\032+.FLINT_RPC_MESSAGE.GetFlint"
  "MetadataResponse\"\000\022a\n\014CreateVolume\022&.FLI"
  "NT_RPC_MESSAGE.CreateVolumeRequest\032\'.FLI"
  "NT_RPC_MESSAGE.CreateVolumeResponse\"\000\022[\n"
  "\nOpenVolume\022$.FLINT_RPC_MESSAGE.OpenVolu"
  "meRequest\032%.FLINT_RPC_MESSAGE.OpenVolume"
  "Response\"\000\022a\n\014DeleteVolume\022&.FLINT_RPC_M"
  "ESSAGE.DeleteVolumeRequest\032\'.FLINT_RPC_M"
  "ESSAGE.DeleteVolumeResponse\"\000\022\\\n\013ListVol"
  "umes\022$.FLINT_RPC_MESSAGE.ListVolumeReque"
  "st\032%.FLINT_RPC_MESSAGE.ListVolumeRespons"
  "e\"\000\022p\n\021VolumeExtentFault\022+.FLINT_RPC_MES"
  "SAGE.VolumeExtentFaultRequest\032,.FLINT_RP"
  "C_MESSAGE.VolumeExtentFaultResponse\"\0002\310\005"
  "\n\020SchedulerService\022[\n\016RegisterClient\022\".F"
  "LINT_RPC_MESSAGE.RegisterRequest\032#.FLINT"
  "_RPC_MESSAGE.RegisterResponse\"\000\022]\n\020Unreg"
  "isterClient\022\".FLINT_RPC_MESSAGE.Register"
  "Request\032#.FLINT_RPC_MESSAGE.RegisterResp"
  "onse\"\000\022\\\n\017UpdateClientSlo\022\".FLINT_RPC_ME"
  "SSAGE.RegisterRequest\032#.FLINT_RPC_MESSAG"
  "E.RegisterResponse\"\000\022}\n\026RegisterEventCal"
  "lbacks\022/.FLINT_RPC_MESSAGE.RegisterEvent"
  "CallbackRequest\0320.FLINT_RPC_MESSAGE.Regi"
  "sterEventCallbackResponse\"\000\022U\n\010PullView\022"
  "\".FLINT_RPC_MESSAGE.PullViewRequest\032#.FL"
  "INT_RPC_MESSAGE.PullViewResponse\"\000\022[\n\nRe"
  "portCmpl\022$.FLINT_RPC_MESSAGE.ReportCmplR"
  "equest\032%.FLINT_RPC_MESSAGE.ReportCmplRes"
  "ponse\"\000\022g\n\016RequestIOSlice\022(.FLINT_RPC_ME"
  "SSAGE.RequestIOSliceRequest\032).FLINT_RPC_"
  "MESSAGE.RequestIOSliceResponse\"\0002\335\001\n\025Loc"
  "alSchedulerService\022U\n\010PushView\022\".FLINT_R"
  "PC_MESSAGE.PushViewRequest\032#.FLINT_RPC_M"
  "ESSAGE.PushViewResponse\"\000\022m\n\020BottleneckR"
  "eport\022*.FLINT_RPC_MESSAGE.BottleneckRepo"
  "rtRequest\032+.FLINT_RPC_MESSAGE.Bottleneck"
  "ReportResponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_service_2eproto_deps[1] = {
  &::descriptor_table_message_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_service_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_service_2eproto = {
  false, false, 1624, descriptor_table_protodef_service_2eproto, "service.proto", 
  &descriptor_table_service_2eproto_once, descriptor_table_service_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_service_2eproto::offsets,
  nullptr, file_level_enum_descriptors_service_2eproto, file_level_service_descriptors_service_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_service_2eproto_getter() {
  return &descriptor_table_service_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_service_2eproto(&descriptor_table_service_2eproto);
namespace FLINT_RPC_SERVICE {

// @@protoc_insertion_point(namespace_scope)
}  // namespace FLINT_RPC_SERVICE
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
